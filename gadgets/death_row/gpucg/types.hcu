#ifndef DATA_TYPES_HCU_
#define DATA_TYPES_HCU_

#include "vec.hpp"
#include "ndarray.hpp"


namespace mr_recon_vectors
{
	typedef vec2<float> float2;
	typedef vec3<float> float3;
	typedef vec4<float> float4;

	typedef vec2<double> double2;
	typedef vec3<double> double3;
	typedef vec4<double> double4;

	typedef N_vec2<int> int2;
	typedef N_vec3<int> int3;
	typedef N_vec4<int> int4;

	typedef N_vec2<unsigned int> uint2;
	typedef N_vec3<unsigned int> uint3;
	typedef N_vec4<unsigned int> uint4;

	typedef N_vec2<char> char2;
	typedef N_vec3<char> char3;
	typedef N_vec4<char> char4;
}


namespace mr_recon
{
	typedef NDArray<double> RealDoubleArray;
	typedef NDArray<float> RealFloatArray;
	typedef NDArray<int> RealIntArray;
	typedef NDArray<unsigned int> RealUIntArray;
	typedef NDArray<char> RealCharArray;

	typedef NDArray<mr_recon_vectors::float2> Float2Array;
	typedef NDArray<mr_recon_vectors::float3> Float3Array;
	typedef NDArray<mr_recon_vectors::float4> Float4Array;

	typedef NDArray<mr_recon_vectors::double2> Double2Array;
	typedef NDArray<mr_recon_vectors::double3> Double3Array;
	typedef NDArray<mr_recon_vectors::double4> Double4Array;

	typedef NDArray<mr_recon_vectors::int2> Int2Array;
	typedef NDArray<mr_recon_vectors::int3> Int3Array;
	typedef NDArray<mr_recon_vectors::int4> Int4Array;

	typedef NDArray<mr_recon_vectors::uint2> UInt2Array;
	typedef NDArray<mr_recon_vectors::uint3> UInt3Array;
	typedef NDArray<mr_recon_vectors::uint4> UInt4Array;

	typedef NDArray<mr_recon_vectors::char2> Char2Array;
	typedef NDArray<mr_recon_vectors::char3> Char3Array;
	typedef NDArray<mr_recon_vectors::char4> Char4Array;
}

#endif //DATA_TYPES_HPP
