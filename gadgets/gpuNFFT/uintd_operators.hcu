#pragma once

#include <vector_functions.h>

//
// Overloaded operators for uint2/3/4
//

__inline__ __host__ __device__ uint2 operator *(uint2 a, uint2 b)
{
  return make_uint2(a.x*b.x, a.y*b.y);
}

__inline__ __host__ __device__ uint3 operator *(uint3 a, uint3 b)
{
  return make_uint3(a.x*b.x, a.y*b.y, a.z*b.z);
}

__inline__ __host__ __device__ uint4 operator *(uint4 a, uint4 b)
{
  return make_uint4(a.x*b.x, a.y*b.y, a.z*b.z, a.w*b.w);
}

__inline__ __host__ __device__ uint2 operator *(unsigned int f, uint2 v)
{
  return make_uint2(v.x*f, v.y*f);
}

__inline__ __host__ __device__ uint3 operator *(unsigned int f, uint3 v)
{
  return make_uint3(v.x*f, v.y*f, v.z*f);
}

__inline__ __host__ __device__ uint4 operator *(unsigned int f, uint4 v)
{
  return make_uint4(v.x*f, v.y*f, v.z*f, v.w*f);
}

__inline__ __host__ __device__ uint2 operator *(uint2 v, unsigned int f)
{
  return make_uint2(v.x*f, v.y*f);
}

__inline__ __host__ __device__ uint3 operator *(uint3 v, unsigned int f)
{
  return make_uint3(v.x*f, v.y*f, v.z*f);
}

__inline__ __host__ __device__ uint4 operator *(uint4 v, unsigned int f)
{
  return make_uint4(v.x*f, v.y*f, v.z*f, v.w*f);
}

__inline__ __host__ __device__ uint2 operator +(uint2 a, uint2 b)
{
  return make_uint2(a.x+b.x, a.y+b.y);
}

__inline__ __host__ __device__ uint3 operator +(uint3 a, uint3 b)
{
  return make_uint3(a.x+b.x, a.y+b.y, a.z+b.z);
}

__inline__ __host__ __device__ uint4 operator +(uint4 a, uint4 b)
{
  return make_uint4(a.x+b.x, a.y+b.y, a.z+b.z, a.w+b.w);
}

__inline__ __host__ __device__ uint2 operator +(unsigned int a, uint2 b)
{
  return make_uint2(a+b.x, a+b.y);
}

__inline__ __host__ __device__ uint3 operator +(unsigned int a, uint3 b)
{
  return make_uint3(a+b.x, a+b.y, a+b.z);
}

__inline__ __host__ __device__ uint4 operator +(unsigned int a, uint4 b)
{
  return make_uint4(a+b.x, a+b.y, a+b.z, a+b.w);
}


__inline__ __host__ __device__ void operator +=(uint2 &b, uint2 a)
{
  b.x += a.x;
  b.y += a.y;
}

__inline__ __host__ __device__ void operator +=(uint3 &b, uint3 a)
{
  b.x += a.x;
  b.y += a.y;
  b.z += a.z;
}

__inline__ __host__ __device__ void operator +=(uint4 &b, uint4 a)
{
  b.x += a.x;
  b.y += a.y;
  b.z += a.z;
  b.w += a.w;
}

__inline__ __host__ __device__ uint2 operator -(uint2 a, uint2 b)
{
  return make_uint2(a.x-b.x, a.y-b.y);
}

__inline__ __host__ __device__ uint3 operator -(uint3 a, uint3 b)
{
  return make_uint3(a.x-b.x, a.y-b.y, a.z-b.z);
}

__inline__ __host__ __device__ uint4 operator -(uint4 a, uint4 b)
{
  return make_uint4(a.x-b.x, a.y-b.y, a.z-b.z, a.w-b.w);
}

__inline__ __host__ __device__ void operator -=(uint2 & b, uint2 a)
{
  b.x -= a.x;
  b.y -= a.y;
}

__inline__ __host__ __device__ void operator -=(uint3 & b, uint3 a)
{
  b.x -= a.x;
  b.y -= a.y;
  b.z -= a.z;
}

__inline__ __host__ __device__ void operator -=(uint4 & b, uint4 a)
{
  b.x -= a.x;
  b.y -= a.y;
  b.z -= a.z;
  b.w -= a.w;
}

__inline__ __host__ __device__ uint2 operator /(uint2 a, uint2 b)
{
  return make_uint2(a.x/b.x, a.y/b.y);
}

__inline__ __host__ __device__ uint3 operator /(uint3 a, uint3 b)
{
  return make_uint3(a.x/b.x, a.y/b.y, a.z/b.z);
}

__inline__ __host__ __device__ uint4 operator /(uint4 a, uint4 b)
{
  return make_uint4(a.x/b.x, a.y/b.y, a.z/b.z, a.w/b.w);
}

__inline__ __host__ __device__ uint2 operator /(uint2 a, unsigned int f)
{
  return make_uint2(a.x/f, a.y/f);
}

__inline__ __host__ __device__ uint3 operator /(uint3 a, unsigned int f)
{
  return make_uint3(a.x/f, a.y/f, a.z/f);
}

__inline__ __host__ __device__ uint4 operator /(uint4 a, unsigned int f)
{
  return make_uint4(a.x/f, a.y/f, a.z/f, a.w/f);
}

__inline__ __host__ __device__ uint2 operator /(unsigned int ui1, uint2 ui2)
{
  return make_uint2(ui1/ui2.x, ui1/ui2.y);
}

__inline__ __host__ __device__ uint3 operator /(unsigned int ui1, uint3 ui2)
{
  return make_uint3(ui1/ui2.x, ui1/ui2.y, ui1/ui2.z);
}

__inline__ __host__ __device__ uint4 operator /(unsigned int ui1, uint4 ui2)
{
  return make_uint4(ui1/ui2.x, ui1/ui2.y, ui1/ui2.z, ui1/ui2.w);
}

__inline__ __host__ __device__ void operator /=(uint2 &b, unsigned int f)
{
  b.x /= f;
  b.y /= f;
}

__inline__ __host__ __device__ void operator /=(uint3 &b, unsigned int f)
{
  b.x /= f;
  b.y /= f;
  b.z /= f;
}

__inline__ __host__ __device__ void operator /=(uint4 &b, unsigned int f)
{
  b.x /= f;
  b.y /= f;
  b.z /= f;
  b.w /= f;
}

__inline__ __host__ __device__ uint2 operator >>(uint2 a, unsigned int b)
{
  return make_uint2(a.x>>b, a.y>>b);
}

__inline__ __host__ __device__ uint3 operator >>(uint3 a, unsigned int b)
{
  return make_uint3(a.x>>b, a.y>>b, a.z>>b);
}

__inline__ __host__ __device__ uint4 operator >>(uint4 a, unsigned int b)
{
  return make_uint4(a.x>>b, a.y>>b, a.z>>b, a.w>>b );
}

__inline__ __host__ __device__ uint2 operator <<(uint2 a, unsigned int b)
{
  return make_uint2(a.x<<b, a.y<<b);
}

__inline__ __host__ __device__ uint3 operator <<(uint3 a, unsigned int b)
{
  return make_uint3(a.x<<b, a.y<<b, a.z<<b);
}

__inline__ __host__ __device__ uint4 operator <<(uint4 a, unsigned int b)
{
  return make_uint4(a.x<<b, a.y<<b, a.z<<b, a.w<<b);
}

__inline__ __host__ __device__ uint2 operator %(uint2 ui1, unsigned int ui2)
{
  return make_uint2(ui1.x%ui2, ui1.y%ui2);
}

__inline__ __host__ __device__ uint3 operator %(uint3 ui1, unsigned int ui2)
{
  return make_uint3(ui1.x%ui2, ui1.y%ui2, ui1.z%ui2);
}

__inline__ __host__ __device__ uint4 operator %(uint4 ui1, unsigned int ui2)
{
  return make_uint4(ui1.x%ui2, ui1.y%ui2, ui1.z%ui2, ui1.w%ui2);
}

__inline__ __host__ __device__ uint2 operator %(unsigned int ui1, uint2 ui2)
{
  return make_uint2(ui1%ui2.x, ui1%ui2.y);
}

__inline__ __host__ __device__ uint3 operator %(unsigned int ui1, uint3 ui2)
{
  return make_uint3(ui1%ui2.x, ui1%ui2.y, ui1%ui2.z);
}

__inline__ __host__ __device__ uint4 operator %(unsigned int ui1, uint4 ui2)
{
  return make_uint4(ui1%ui2.x, ui1%ui2.y, ui1%ui2.z, ui1%ui2.w);
}

__inline__ __host__ __device__ uint2 operator %(uint2 ui1, uint2 ui2)
{
  return make_uint2(ui1.x%ui2.x, ui1.y%ui2.y);
}

__inline__ __host__ __device__ uint3 operator %(uint3 ui1, uint3 ui2)
{
  return make_uint3(ui1.x%ui2.x, ui1.y%ui2.y, ui1.z%ui2.z);
}

__inline__ __host__ __device__ uint4 operator %(uint4 ui1, uint4 ui2)
{
  return make_uint4(ui1.x%ui2.x, ui1.y%ui2.y, ui1.z%ui2.z, ui1.w%ui2.w);
}

__inline__ __host__ __device__ bool operator <(uint2 ui1, uint2 ui2)
{
  return ui1.x<ui2.x && ui1.y<ui2.y;
}

__inline__ __host__ __device__ bool operator <(uint3 ui1, uint3 ui2)
{
  return ui1.x<ui2.x && ui1.y<ui2.y && ui1.z<ui2.z;
}

__inline__ __host__ __device__ bool operator <(uint4 ui1, uint4 ui2)
{
  return ui1.x<ui2.x && ui1.y<ui2.y && ui1.z<ui2.z && ui1.w<ui2.w;
}

__inline__ __host__ __device__ bool operator <=(uint2 ui1, uint2 ui2)
{
  return ui1.x<=ui2.x && ui1.y<=ui2.y;
}

__inline__ __host__ __device__ bool operator <=(uint3 ui1, uint3 ui2)
{
  return ui1.x<=ui2.x && ui1.y<=ui2.y && ui1.z<=ui2.z;
}

__inline__ __host__ __device__ bool operator <=(uint4 ui1, uint4 ui2)
{
  return ui1.x<=ui2.x && ui1.y<=ui2.y && ui1.z<=ui2.z && ui1.w<=ui2.w;
}

__inline__ __host__ __device__ bool operator >(uint2 ui1, uint2 ui2)
{
  return ui1.x>ui2.x && ui1.y>ui2.y;
}

__inline__ __host__ __device__ bool operator >(uint3 ui1, uint3 ui2)
{
  return ui1.x>ui2.x && ui1.y>ui2.y && ui1.z>ui2.z;
}

__inline__ __host__ __device__ bool operator >(uint4 ui1, uint4 ui2)
{
  return ui1.x>ui2.x && ui1.y>ui2.y && ui1.z>ui2.z && ui1.w>ui2.w;
}

__inline__ __host__ __device__ bool operator >=(uint2 ui1, uint2 ui2)
{
  return ui1.x>=ui2.x && ui1.y>=ui2.y;
}

__inline__ __host__ __device__ bool operator >=(uint3 ui1, uint3 ui2)
{
  return ui1.x>=ui2.x && ui1.y>=ui2.y && ui1.z>=ui2.z;
}

__inline__ __host__ __device__ bool operator >=(uint4 ui1, uint4 ui2)
{
  return ui1.x>=ui2.x && ui1.y>=ui2.y && ui1.z>=ui2.z && ui1.w>=ui2.w;
}

__inline__ __host__ __device__ bool operator ==(uint2 a, uint2 b)
{
  return (a.x==b.x && a.y==b.y);
}

__inline__ __host__ __device__ bool operator ==(uint3 a, uint3 b)
{
  return (a.x==b.x && a.y==b.y && a.z==b.z );
}

__inline__ __host__ __device__ bool operator ==(uint4 a, uint4 b)
{
  return (a.x==b.x && a.y==b.y && a.z==b.z && a.w==b.w );
}

__inline__ __host__ __device__ bool operator  && (uint2 a, uint2 b)
{
  return ((a.x && b.x)  &&  (a.y && b.y));
}

__inline__ __host__ __device__ bool operator  && (uint3 a, uint3 b)
{
  return ((a.x && b.x)  &&  (a.y && b.y)  &&  (a.z && b.z) );
}

__inline__ __host__ __device__ bool operator  && (uint4 a, uint4 b)
{
  return ((a.x && b.x)  &&  (a.y && b.y)  &&  (a.z && b.z)  &&  (a.w && b.w) );
}

__inline__ __host__ __device__ bool operator  || (uint2 a, uint2 b)
{
  return ((a.x || b.x)  &&  (a.y || b.y));
}

__inline__ __host__ __device__ bool operator  || (uint3 a, uint3 b)
{
  return ((a.x || b.x)  &&  (a.y || b.y)  &&  (a.z || b.z) );
}

__inline__ __host__ __device__ bool operator  || (uint4 a, uint4 b)
{
  return ((a.x || b.x)  &&  (a.y || b.y)  &&  (a.z || b.z)  &&  (a.w || b.w) );
}
