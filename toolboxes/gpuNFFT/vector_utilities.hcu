#pragma once

template<class T> __inline__ __host__ __device__ T get_epsilon();
template<class T> __inline__ __host__ __device__ T get_zero();
template<class T> __inline__ __host__ __device__ T get_one();

template<class S, class T> __inline__ __host__ __device__ T real_to_reald( const S *in );
template<class S, class T> __inline__ __host__ __device__ T real_to_reald( const S r, const S fill );

template<class T> __inline__ __host__ __device__ T int_to_intd( const int *in );
template<class T> __inline__ __host__ __device__ T int_to_intd( const int i, const int fill );

template<class T> __inline__ __host__ __device__ T uint_to_uintd( const unsigned int *in );
template<class T> __inline__ __host__ __device__ T uint_to_uintd( const unsigned int i, const unsigned int fill );

template<class S, class T> __inline__ __host__ __device__ T mul( S s, T t );

#include "uintd_utilities.hcu"
#include "intd_utilities.hcu"
#include "floatd_utilities.hcu"
//#include "double_utilities.hcu"
