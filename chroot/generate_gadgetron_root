#!/usr/bin/perl

use FindBin;
use lib $FindBin::Bin;

my $gadgetron_root = $ARGV[0];
my $new_root = $ARGV[1];
#my $dep_list = "/tmp/gadgetron_dep_list.txt";
#my $dep_list_pruned = "/tmp/gadgetron_dep_list_pruned.txt";

#system("$FindBin::Bin/make_list_of_dependencies $gadgetron_root > $dep_list");
#system("$FindBin::Bin/unique_lines_in_file $dep_list > $dep_list_pruned");

#system("sudo rm -rf $new_root;mkdir -p $new_root" . $gadgetron_root);
#system("sudo mkdir -p $new_root" . $gadgetron_root);

#system("sudo cp --parents -r $gadgetron_root/* $new_root" . $gadgetron_root . "/");
#system("sudo cp --parents -r $gadgetron_root/* $new_root" . "/");


my $directory = $gadgetron_root . "/bin";

opendir (DIR, $new_root . $directory) or die $!;
while (my $file = readdir(DIR)) {
    next if ($file =~ m/^\./);
    system("$FindBin::Bin/copy_file_and_dependencies $gadgetron_root/bin/$file $new_root");
}
closedir(DIR);

$directory = $ARGV[0] . "/lib";

opendir (DIR, $new_root . $directory) or die $!;
while (my $file = readdir(DIR)) {
    next unless ($file =~ m/\.so$/);
    system("$FindBin::Bin/copy_file_and_dependencies $gadgetron_root/lib/$file $new_root");
}
closedir(DIR);




#open(FILE, $dep_list_pruned);
#while (<FILE>) {
#    chomp;
#    system("$FindBin::Bin/copy_file_and_dependencies $_ $new_root");
#}
#close(FILE);
